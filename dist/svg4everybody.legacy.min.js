!function(a,b){"function"==typeof define&&define.amd?// AMD. Register as an anonymous module unless amdModuleId is set
define([],function(){return a.svg4everybody=b()}):"object"==typeof exports?module.exports=b():a.svg4everybody=b()}(this,function(){/*! svg4everybody v2.0.3 | github.com/jonathantneal/svg4everybody */
function a(a,b){
// if the target exists
if(b){
// create a document fragment to hold the contents of the target
var c=document.createDocumentFragment(),e=d(a),f=!e.hasAttribute("viewBox")&&b.getAttribute("viewBox");
// conditionally set the viewBox on the svg
f&&e.setAttribute("viewBox",f);
// copy the contents of the clone into the fragment
for(// clone the target
var g=b.cloneNode(!0);g.childNodes.length;)c.appendChild(g.firstChild);
// append the fragment into the svg
a.appendChild(c)}}function b(b){
// listen to changes in the request
b.onreadystatechange=function(){
// if the request is ready
if(4===b.readyState){
// get the cached html document
var c=b._cachedDocument;
// ensure the cached html document based on the xhr response
c||(c=b._cachedDocument=document.implementation.createHTMLDocument(""),c.body.innerHTML=b.responseText,b._cachedTarget={}),// clear the xhr embeds list and embed each item
b._embeds.splice(0).map(function(d){
// get the cached target
var e=b._cachedTarget[d.id];
// ensure the cached target
e||(e=b._cachedTarget[d.id]=c.getElementById(d.id)),
// embed the target into the svg
a(d.node,e)})}},// test the ready state change immediately
b.onreadystatechange()}function c(c){function e(){
// while the index exists in the live <use> collection
for(// get the cached <use> index
var c=0;c<p.length;){
// get the current <use>
var j=p[c],k=j.parentNode,l=d(k);if(l){var m=j.getAttribute("xlink:href");
// if running with legacy support
if(f){
// create a new fallback image
var q=document.createElement("img");
// force display in older IE
q.style.cssText="display:inline-block;height:100%;width:100%",// set the fallback size using the svg size
q.setAttribute("width",l.getAttribute("width")||l.clientWidth),q.setAttribute("height",l.getAttribute("height")||l.clientHeight),
// set the fallback src
q.src=g(m,l,j),// replace the <use> with the fallback image
k.replaceChild(q,j)}else if(i&&(!h.validate||h.validate(m,l,j))){
// remove the <use> element
k.removeChild(j);
// parse the src and get the url and id
var r=m.split("#"),s=r.shift(),t=r.join("#");
// if the link is external
if(s.length){
// get the cached xhr request
var u=n[s];
// ensure the xhr request exists
u||(u=n[s]=new XMLHttpRequest,u.open("GET",s),u.send(),u._embeds=[]),// add the svg and id as an item to the xhr embeds list
u._embeds.push({node:k,id:t}),// prepare the xhr ready state change event
b(u)}else
// embed the local id into the svg
a(k,document.getElementById(t))}}else
// increase the index when the previous value was not "valid"
++c}
// continue the interval
o(e,67)}var f,g,h=Object(c);g=h.fallback||function(a){return a.replace(/\?[^#]+/,"").replace("#",".").replace(/^\./,"")+".png"+(/\?[^#]+/.exec(a)||[""])[0]},f="nosvg"in h?h.nosvg:/\bMSIE [1-8]\b/.test(navigator.userAgent),f&&(document.createElement("svg"),document.createElement("use"));
// set whether the polyfill will be activated or not
var i,j=/\bMSIE [1-8]\.0\b/,k=/\bTrident\/[567]\b|\bMSIE (?:9|10)\.0\b/,l=/\bAppleWebKit\/(\d+)\b/,m=/\bEdge\/12\.(\d+)\b/;i="polyfill"in h?h.polyfill:j.test(navigator.userAgent)||k.test(navigator.userAgent)||(navigator.userAgent.match(m)||[])[1]<10547||(navigator.userAgent.match(l)||[])[1]<537;
// create xhr requests object
var n={},o=window.requestAnimationFrame||setTimeout,p=document.getElementsByTagName("use");
// conditionally start the interval if the polyfill is active
i&&e()}function d(a){for(var b=a;"svg"!==b.nodeName.toLowerCase()&&(b=b.parentNode););return b}return c});